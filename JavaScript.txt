JAVASCRIPT


let x = 10; // LET --> Variables defined with let have Block Scope.

console.log(x);


<script> </script>

//Comment Line
<script> 
document.getElementById("myH").innerHTML = "My First Page";
</script>



<p id = "myH"> </p>

const price1 = 5; // constant

var x = 19; // Variables declared with the var keyword can NOT have block scope.

function myFunc (p1, p2) {
	return p1 * p2;
}



function toCelsius(fahrenheit) {
  return (5/9) * (fahrenheit-32);
}
document.getElementById("demo").innerHTML = toCelsius;


const car = {type:"Fiat", model:"500", color:"white"};
objectName["propertyName"]
objectName.propertyName

const person = {
  firstName: "John",
  lastName : "Doe",
  id       : 5566,
  fullName : function() {
    return this.firstName + " " + this.lastName;
  }
};


Events 


<button onclick="document.getElementById('demo').innerHTML = Date()">The time is?</button>


Arrays

const cars = ["Saab", "Volvo", "BMW"];
let car = cars[0];
cars.length   // Returns the number of elements
cars.sort()   // Sorts the array


IF Statements 

if (hour < 18) {
  greeting = "Good day";
} else {
  greeting = "Good evening";
}


FOR

let text = "<ul>";
for (let i = 0; i < fLen; i++) {
  text += "<li>" + fruits[i] + "</li>";
}
text += "</ul>";

const person = {fname:"John", lname:"Doe", age:25};

let text = "";
for (let x in person) {
  text += person[x];
}

const cars = ["BMW", "Volvo", "Mini"];

let text = "";
for (let x in cars) {
  text += cars[x] + "<br>";
}

let text = "";
for (let x of cars) {
  text += x;
}